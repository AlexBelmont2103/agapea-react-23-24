{"ast":null,"code":"let pedidoRESTService = {\n  recuperarProvincias: async function () {\n    //Recuperar provincias a traves de geoapi.es\n    const key = \"1f444ec01b55473e5dfba4cd58da5436cc2bd5070c109bd3315237974d9be46e\";\n    try {\n      const respuesta = await fetch(`https://apiv1.geoapi.es/provincias?type=JSON&key=${key}&sandbox=0`);\n      //Recuperar array de provincias\n      const provincias = await respuesta.json();\n      //Devolver array de provincias\n      const provinciasArray = provincias.data;\n      return provinciasArray;\n    } catch (error) {\n      return [];\n    }\n  },\n  recuperarMunicipios: async function (CPRO) {\n    const key = \"1f444ec01b55473e5dfba4cd58da5436cc2bd5070c109bd3315237974d9be46e\";\n    try {\n      const respuesta = await fetch(`https://apiv1.geoapi.es/municipios?CPRO=${CPRO}&type=JSON&key=${key}&sandbox=0`);\n      //Recuperar array de provincias\n      const municipios = await respuesta.json();\n      //Devolver array de provincias\n      const municipiosArray = municipios.data;\n      return municipiosArray;\n    } catch (error) {\n      return [];\n    }\n  },\n  finalizarPedido: async function (datosEntrega, datosFactura, datosPago, elementosPedido, gastosEnvio, clienteLogged) {\n    try {\n      let _respServer = await fetch(\"http://localhost:5000/api/Pedido/FinalizarPedido\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${clienteLogged.tokensesion}`\n        },\n        body: JSON.stringify({\n          datosEntrega,\n          datosFactura,\n          datosPago,\n          elementosPedido,\n          gastosEnvio,\n          clienteLogged\n        })\n      });\n      if (!_respServer.ok) {\n        throw new Error(\"Error al intentar finalizar pedido...\");\n      } else {\n        let _respServerJSON = await _respServer.json();\n        return _respServerJSON;\n      }\n    } catch (error) {\n      console.log('Error al intentar finalizar pedido...', error);\n      return {};\n    }\n  }\n};\nexport default pedidoRESTService;","map":{"version":3,"names":["pedidoRESTService","recuperarProvincias","key","respuesta","fetch","provincias","json","provinciasArray","data","error","recuperarMunicipios","CPRO","municipios","municipiosArray","finalizarPedido","datosEntrega","datosFactura","datosPago","elementosPedido","gastosEnvio","clienteLogged","_respServer","method","headers","tokensesion","body","JSON","stringify","ok","Error","_respServerJSON","console","log"],"sources":["C:/Users/thard/OneDrive/Documentos/DAW/Segundo/entornoCliente/agapea_react/src/servicios/restPedido.js"],"sourcesContent":["let pedidoRESTService = {\r\n  recuperarProvincias: async function () {\r\n    //Recuperar provincias a traves de geoapi.es\r\n    const key =\r\n      \"1f444ec01b55473e5dfba4cd58da5436cc2bd5070c109bd3315237974d9be46e\";\r\n    try {\r\n      const respuesta = await fetch(\r\n        `https://apiv1.geoapi.es/provincias?type=JSON&key=${key}&sandbox=0`\r\n      );\r\n      //Recuperar array de provincias\r\n      const provincias = await respuesta.json();\r\n      //Devolver array de provincias\r\n      const provinciasArray = provincias.data;\r\n\r\n      return provinciasArray;\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  },\r\n  recuperarMunicipios: async function (CPRO) {\r\n    const key =\r\n      \"1f444ec01b55473e5dfba4cd58da5436cc2bd5070c109bd3315237974d9be46e\";\r\n    try {\r\n      const respuesta = await fetch(\r\n        `https://apiv1.geoapi.es/municipios?CPRO=${CPRO}&type=JSON&key=${key}&sandbox=0`\r\n      );\r\n      //Recuperar array de provincias\r\n      const municipios = await respuesta.json();\r\n      //Devolver array de provincias\r\n      const municipiosArray = municipios.data;\r\n\r\n      return municipiosArray;\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  },\r\n  finalizarPedido: async function (datosEntrega, datosFactura, datosPago, elementosPedido, gastosEnvio, clienteLogged) {\r\n    try{\r\n      let _respServer = await fetch(\"http://localhost:5000/api/Pedido/FinalizarPedido\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\", \r\n          \"Authorization\": `Bearer ${clienteLogged.tokensesion}`\r\n        },\r\n        body: JSON.stringify({datosEntrega,datosFactura,datosPago,elementosPedido,gastosEnvio, clienteLogged}),\r\n      });\r\n      if(!_respServer.ok){\r\n        throw new Error(\"Error al intentar finalizar pedido...\");\r\n      }else{\r\n        let _respServerJSON = await _respServer.json();\r\n        return _respServerJSON;\r\n      }\r\n\r\n    }catch(error){\r\n      console.log('Error al intentar finalizar pedido...',error);\r\n      return {};\r\n    }\r\n  },\r\n};\r\nexport default pedidoRESTService;\r\n"],"mappings":"AAAA,IAAIA,iBAAiB,GAAG;EACtBC,mBAAmB,EAAE,eAAAA,CAAA,EAAkB;IACrC;IACA,MAAMC,GAAG,GACP,kEAAkE;IACpE,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAC1B,oDAAmDF,GAAI,YAC1D,CAAC;MACD;MACA,MAAMG,UAAU,GAAG,MAAMF,SAAS,CAACG,IAAI,CAAC,CAAC;MACzC;MACA,MAAMC,eAAe,GAAGF,UAAU,CAACG,IAAI;MAEvC,OAAOD,eAAe;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,OAAO,EAAE;IACX;EACF,CAAC;EACDC,mBAAmB,EAAE,eAAAA,CAAgBC,IAAI,EAAE;IACzC,MAAMT,GAAG,GACP,kEAAkE;IACpE,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAC1B,2CAA0CO,IAAK,kBAAiBT,GAAI,YACvE,CAAC;MACD;MACA,MAAMU,UAAU,GAAG,MAAMT,SAAS,CAACG,IAAI,CAAC,CAAC;MACzC;MACA,MAAMO,eAAe,GAAGD,UAAU,CAACJ,IAAI;MAEvC,OAAOK,eAAe;IACxB,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACd,OAAO,EAAE;IACX;EACF,CAAC;EACDK,eAAe,EAAE,eAAAA,CAAgBC,YAAY,EAAEC,YAAY,EAAEC,SAAS,EAAEC,eAAe,EAAEC,WAAW,EAAEC,aAAa,EAAE;IACnH,IAAG;MACD,IAAIC,WAAW,GAAG,MAAMjB,KAAK,CAAC,kDAAkD,EAAE;QAChFkB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASH,aAAa,CAACI,WAAY;QACvD,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACZ,YAAY;UAACC,YAAY;UAACC,SAAS;UAACC,eAAe;UAACC,WAAW;UAAEC;QAAa,CAAC;MACvG,CAAC,CAAC;MACF,IAAG,CAACC,WAAW,CAACO,EAAE,EAAC;QACjB,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;MAC1D,CAAC,MAAI;QACH,IAAIC,eAAe,GAAG,MAAMT,WAAW,CAACf,IAAI,CAAC,CAAC;QAC9C,OAAOwB,eAAe;MACxB;IAEF,CAAC,QAAMrB,KAAK,EAAC;MACXsB,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAACvB,KAAK,CAAC;MAC1D,OAAO,CAAC,CAAC;IACX;EACF;AACF,CAAC;AACD,eAAeT,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}