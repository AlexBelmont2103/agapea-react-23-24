{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thard\\\\OneDrive\\\\Documentos\\\\DAW\\\\Segundo\\\\entornoCliente\\\\agapea_react\\\\src\\\\componentes\\\\zonaTienda\\\\librosComponente\\\\ModalListas.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useClienteLoggedContext } from \"../../../contextProviders/clienteLoggedContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalListas({\n  idLibro\n}) {\n  _s();\n  const {\n    clienteLogged,\n    dispatch\n  } = useClienteLoggedContext();\n  const [isChecked, setIsChecked] = useState(false);\n  const handleListaChange = event => {\n    setSelectedLista(event.target.value);\n  };\n  const handleCheckboxChange = event => {\n    setIsChecked(event.target.checked);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    //Comprobamos si el checkbox está marcado y el libro no está en la lista\n    if (isChecked && !clienteLogged.datoscliente.listasDeseos.find(lista => lista._id === selectedLista).libros.some(libro => libro.id === idLibro)) {} else if (!isChecked && clienteLogged.datoscliente.listasDeseos.find(lista => lista._id === selectedLista).libros.some(libro => libro.id === idLibro)) {}\n  };\n\n  // Efecto para modificar el estado de la checkbox si el libro ya está en la lista\n  useEffect(() => {\n    if (clienteLogged) {\n      let lista = clienteLogged.datoscliente.listasDeseos.find(lista => lista.id === selectedLista);\n      setIsChecked(!!lista && lista.libros.some(libro => libro.id === idLibro));\n    }\n  }, [selectedLista]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Selecciona una lista:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLista,\n          onChange: handleListaChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una lista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), clienteLogged.datoscliente.listasDeseos.map(lista => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lista.id,\n            children: lista.nombreLista\n          }, lista.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), \"A\\xF1adir a la lista\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(ModalListas, \"+arSRIbT5X0ayej85qYcdAZzOMU=\", false, function () {\n  return [useClienteLoggedContext];\n});\n_c = ModalListas;\nexport default ModalListas;\nvar _c;\n$RefreshReg$(_c, \"ModalListas\");","map":{"version":3,"names":["useState","useEffect","useClienteLoggedContext","jsxDEV","_jsxDEV","ModalListas","idLibro","_s","clienteLogged","dispatch","isChecked","setIsChecked","handleListaChange","event","setSelectedLista","target","value","handleCheckboxChange","checked","handleSubmit","preventDefault","datoscliente","listasDeseos","find","lista","_id","selectedLista","libros","some","libro","id","children","onSubmit","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","nombreLista","type","_c","$RefreshReg$"],"sources":["C:/Users/thard/OneDrive/Documentos/DAW/Segundo/entornoCliente/agapea_react/src/componentes/zonaTienda/librosComponente/ModalListas.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useClienteLoggedContext } from \"../../../contextProviders/clienteLoggedContext\";\r\n\r\nfunction ModalListas({ idLibro }) {\r\n    const { clienteLogged, dispatch } = useClienteLoggedContext();\r\n\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleListaChange = (event) => {\r\n        setSelectedLista(event.target.value);\r\n    };\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        setIsChecked(event.target.checked);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        //Comprobamos si el checkbox está marcado y el libro no está en la lista\r\n        if (isChecked && !clienteLogged.datoscliente.listasDeseos.find((lista) => lista._id === selectedLista).libros.some((libro) => libro.id === idLibro)) {\r\n\r\n        } else if (!isChecked && clienteLogged.datoscliente.listasDeseos.find((lista) => lista._id === selectedLista).libros.some((libro) => libro.id === idLibro)) {\r\n\r\n        }\r\n    };\r\n\r\n    // Efecto para modificar el estado de la checkbox si el libro ya está en la lista\r\n    useEffect(() => {\r\n        if (clienteLogged) {\r\n            let lista = clienteLogged.datoscliente.listasDeseos.find((lista) => lista.id === selectedLista);\r\n            setIsChecked(!!lista && lista.libros.some((libro) => libro.id === idLibro));\r\n        }\r\n    }, [selectedLista]);\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Selecciona una lista:\r\n                    <select value={selectedLista} onChange={handleListaChange}>\r\n                        <option value=\"\">Selecciona una lista</option>\r\n                        {clienteLogged.datoscliente.listasDeseos.map((lista) => (\r\n                            <option key={lista.id} value={lista.id}>\r\n                                {lista.nombreLista}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={isChecked} onChange={handleCheckboxChange} />\r\n                    Añadir a la lista\r\n                </label>\r\n                <input type=\"submit\" value=\"Enviar\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalListas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}