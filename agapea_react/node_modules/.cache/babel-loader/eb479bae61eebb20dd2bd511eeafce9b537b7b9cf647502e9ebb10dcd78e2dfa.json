{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thard\\\\OneDrive\\\\Documentos\\\\DAW\\\\Segundo\\\\entornoCliente\\\\agapea_react\\\\src\\\\componentes\\\\zonaTienda\\\\librosComponente\\\\ModalListas.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useClienteLoggedContext } from \"../../../contextProviders/clienteLoggedContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalListas({\n  idLibro\n}) {\n  _s();\n  const {\n    clienteLogged,\n    dispatch\n  } = useClienteLoggedContext();\n  const [selectedLista, setSelectedLista] = useState('');\n  const [isChecked, setIsChecked] = useState(false);\n  const handleListaChange = event => {\n    setSelectedLista(event.target.value);\n  };\n  const handleCheckboxChange = event => {\n    setIsChecked(event.target.checked);\n  };\n  async function handleSubmit(event) {\n    event.preventDefault();\n    //actualizamos la vairable selectedLista a la lista seleccionada\n    setSelectedLista(event.target.value);\n    //Si el checkbox está marcado\n    if (isChecked) {\n      //Comprobamos si el libro ya está en la lista\n      let lista = clienteLogged.datoscliente.listasDeseos.find(lista => lista._id === selectedLista);\n      if (!lista.libros.some(libro => libro._id === idLibro)) {}\n    } else {\n      //Comprobamos si el libro no está en la lista\n      let lista = clienteLogged.datoscliente.listasDeseos.find(lista => lista._id === selectedLista);\n      if (!lista.libros.some(libro => libro._id === idLibro)) {}\n    }\n  }\n\n  // Efecto para modificar el estado de la checkbox si el libro ya está en la lista\n  useEffect(() => {\n    if (clienteLogged) {\n      let lista = clienteLogged.datoscliente.listasDeseos.find(lista => lista.id === selectedLista);\n      setIsChecked(!!lista && lista.libros.some(libro => libro.id === idLibro));\n    }\n  }, [selectedLista]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Selecciona una lista:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLista,\n          onChange: handleListaChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una lista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), clienteLogged.datoscliente.listasDeseos.map(lista => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lista.id,\n            children: lista.nombreLista\n          }, lista.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), \"A\\xF1adir a la lista\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(ModalListas, \"e7Lsj5XEVctq9YEtXs/wf6tv1GY=\", false, function () {\n  return [useClienteLoggedContext];\n});\n_c = ModalListas;\nexport default ModalListas;\nvar _c;\n$RefreshReg$(_c, \"ModalListas\");","map":{"version":3,"names":["useState","useEffect","useClienteLoggedContext","jsxDEV","_jsxDEV","ModalListas","idLibro","_s","clienteLogged","dispatch","selectedLista","setSelectedLista","isChecked","setIsChecked","handleListaChange","event","target","value","handleCheckboxChange","checked","handleSubmit","preventDefault","lista","datoscliente","listasDeseos","find","_id","libros","some","libro","id","children","onSubmit","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","nombreLista","type","_c","$RefreshReg$"],"sources":["C:/Users/thard/OneDrive/Documentos/DAW/Segundo/entornoCliente/agapea_react/src/componentes/zonaTienda/librosComponente/ModalListas.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useClienteLoggedContext } from \"../../../contextProviders/clienteLoggedContext\";\r\n\r\nfunction ModalListas({ idLibro }) {\r\n    const { clienteLogged, dispatch } = useClienteLoggedContext();\r\n    const [selectedLista, setSelectedLista] = useState('');\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleListaChange = (event) => {\r\n        setSelectedLista(event.target.value);\r\n    };\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        setIsChecked(event.target.checked);\r\n    };\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        //actualizamos la vairable selectedLista a la lista seleccionada\r\n        setSelectedLista(event.target.value);\r\n        //Si el checkbox está marcado\r\n        if (isChecked) {\r\n            //Comprobamos si el libro ya está en la lista\r\n            let lista = clienteLogged.datoscliente.listasDeseos.find((lista) => lista._id === selectedLista);\r\n            if (!lista.libros.some((libro) => libro._id === idLibro)) {\r\n\r\n            }\r\n        }else{\r\n            //Comprobamos si el libro no está en la lista\r\n            let lista = clienteLogged.datoscliente.listasDeseos.find((lista) => lista._id === selectedLista);\r\n            if (!lista.libros.some((libro) => libro._id === idLibro)) {\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // Efecto para modificar el estado de la checkbox si el libro ya está en la lista\r\n    useEffect(() => {\r\n        if (clienteLogged) {\r\n            let lista = clienteLogged.datoscliente.listasDeseos.find((lista) => lista.id === selectedLista);\r\n            setIsChecked(!!lista && lista.libros.some((libro) => libro.id === idLibro));\r\n        }\r\n    }, [selectedLista]);\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Selecciona una lista:\r\n                    <select value={selectedLista} onChange={handleListaChange}>\r\n                        <option value=\"\">Selecciona una lista</option>\r\n                        {clienteLogged.datoscliente.listasDeseos.map((lista) => (\r\n                            <option key={lista.id} value={lista.id}>\r\n                                {lista.nombreLista}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={isChecked} onChange={handleCheckboxChange} />\r\n                    Añadir a la lista\r\n                </label>\r\n                <input type=\"submit\" value=\"Enviar\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalListas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}